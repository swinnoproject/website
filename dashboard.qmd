---
format: dashboard
title: Innovations commercialized 1970-2021
jupyter: python3

---


```{python}
# | output: false
import plotly.express as px
import pandas as pd
import sqlite3

import plotly.io as pio

pio.renderers.default = "notebook"

# https://zenodo.org/records/10602309/files/SWINNO.UDIT.sqlite3
db = sqlite3.connect("SWINNO.UDIT.sqlite3")
```


<!-- This Comment  is integral to the formatting.-->

## Row {height=150px}

```{python}
#| content: valuebox
#| title: Innovations
#| icon: gear-fill
#| color: success
#|
num_innovation, *_ = db.execute('select count(*) from innovation where year <= 2021 and year >= 1970').fetchone()

dict(value=num_innovation)
```

```{python}
# | content: valuebox
# | title: Articles
# | icon: newspaper
# | color: secondary

num_article, *_ = db.execute(
    "select count(*) from article where year <= 2021 and year >= 1970"
).fetchone()

dict(value=num_article)
```

```{python}
# | content: valuebox
# | title: Entities
# | icon: buildings-fill

num_entity, *_ = db.execute(
    "select count(*) from entity as e where e.id in (select entity_id from innovation_entity as ie join innovation as i on ie.innovation_id == i.id where year <= 2021 and year >= 1970)"
).fetchone()

dict(value=num_entity)
```


## Row {height=70%}

```{python}
# | title: Number of innovations by year of commercialization
x, y = zip(
    *db.execute(
        "select year, count(*) as count from innovation where year >= 1970 and year <= 2021 group by year"
    )
)
fig = px.line(
    x=x,
    y=y,
    labels={"x": "Year of Commercialization", "y": "NUmber of innovations"},
    # title = "Number of innovations commercialized by year",
)
a = fig.update_xaxes(range=(1969, 2022))
b = fig.update_yaxes(range=(0, 200))
fig.show()
```

```{python}
# | title: Innovations by Product code (SNI-2002)
def make_text(id, name):
    text = str(id)
    if name is None or len(name.strip()) == 0:
        return text

    text += " " + name
    return text


df = pd.read_sql_query(
    "select prod_code as Code, id, name_sv from innovation where year >= 1970 and year <= 2021 and prod_code is not null group by id",
    db,
)
# DataFrame({'Code':code, 'count':count})
df["Innovation Product codes - SNI2007"] = "Innovation Product codes - SNI2007"
df["2digit"] = df["Code"].apply(lambda x: x[:2])
df["3digit"] = df["Code"].apply(lambda x: x[:3])
df["4digit"] = df["Code"].apply(lambda x: x[:4])
df["5digit"] = df["Code"].apply(lambda x: x[:5])
df["count"] = 1
df["text"] = df.apply(lambda x: make_text(x["id"], x["name_sv"]), axis=1)

fig = px.treemap(
    df,
    path=[px.Constant(""), "2digit", "3digit", "4digit", "5digit", "text"],
    values="count",
    # title="Innovations by SNI-2002 Product Code"
)

fig.show()
```


## Row {height=3%}

::: {.card  style="font-size: 50%;"}

More visualisations coming soon, data is availabie [here](https://www.lusem.lu.se/economic-history/databases/swinno)

:::
